// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Achievements component Achievements render 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <section>
        <h2>
          Achievements
        </h2>
        <div>
          <section>
            <div>
              <svg
                data-testid="svg"
                height="148"
                viewBox="0 0 148 148"
                width="148"
              >
                <circle
                  cx="74"
                  cy="74"
                  data-testid="circle"
                  fill="transparent"
                  r="46"
                  stroke="current-color"
                  stroke-width="14"
                  style="stroke-dashoffset: NaN; stroke-dasharray: 289.02652413026095 289.02652413026095;"
                />
              </svg>
              <span>
                NaN
                /
                NaN
              </span>
              <span>
                progress
              </span>
            </div>
            <p>
              I have created a set of achievements for myself and I use this page to track them.
            </p>
            <p>
              If you want to give me a challenge and rate it, please feel free to submit it with the button below!
            </p>
            <button
              type="button"
            >
              Challenge me
            </button>
          </section>
          <div>
            <div
              data-testid="achievements-block"
            >
              <span>
                to be achieved:
              </span>
              <div>
                <article
                  class="undefined undefined undefined"
                >
                  <figure>
                    <img
                      alt="Rarity icon representing legendary"
                      src="test-file-stub"
                    />
                    <figcaption>
                      legendary
                    </figcaption>
                  </figure>
                  <div
                    class="undefined"
                  >
                    <div>
                      <h4>
                        80 level
                         
                      </h4>
                      <p>
                        Get level 80
                      </p>
                      <time
                        datetime="ongoing"
                      >
                        achieved:
                        ongoing
                      </time>
                    </div>
                  </div>
                </article>
              </div>
            </div>
          </div>
          <div>
            <label
              data-testid="test-achievements-label"
              for="all"
            >
              <input
                checked=""
                id="all"
                name="achievements"
                type="radio"
                value="all"
              />
              <div />
              <div>
                all
              </div>
            </label>
            <label
              data-testid="test-achievements-label"
              for="achieved"
            >
              <input
                id="achieved"
                name="achievements"
                type="radio"
                value="achieved"
              />
              <div />
              <div>
                achieved
              </div>
            </label>
            <label
              data-testid="test-achievements-label"
              for="inProgress"
            >
              <input
                id="inProgress"
                name="achievements"
                type="radio"
                value="inProgress"
              />
              <div />
              <div>
                in progress
              </div>
            </label>
          </div>
        </div>
      </section>
    </div>
  </body>,
  "container": <div>
    <section>
      <h2>
        Achievements
      </h2>
      <div>
        <section>
          <div>
            <svg
              data-testid="svg"
              height="148"
              viewBox="0 0 148 148"
              width="148"
            >
              <circle
                cx="74"
                cy="74"
                data-testid="circle"
                fill="transparent"
                r="46"
                stroke="current-color"
                stroke-width="14"
                style="stroke-dashoffset: NaN; stroke-dasharray: 289.02652413026095 289.02652413026095;"
              />
            </svg>
            <span>
              NaN
              /
              NaN
            </span>
            <span>
              progress
            </span>
          </div>
          <p>
            I have created a set of achievements for myself and I use this page to track them.
          </p>
          <p>
            If you want to give me a challenge and rate it, please feel free to submit it with the button below!
          </p>
          <button
            type="button"
          >
            Challenge me
          </button>
        </section>
        <div>
          <div
            data-testid="achievements-block"
          >
            <span>
              to be achieved:
            </span>
            <div>
              <article
                class="undefined undefined undefined"
              >
                <figure>
                  <img
                    alt="Rarity icon representing legendary"
                    src="test-file-stub"
                  />
                  <figcaption>
                    legendary
                  </figcaption>
                </figure>
                <div
                  class="undefined"
                >
                  <div>
                    <h4>
                      80 level
                       
                    </h4>
                    <p>
                      Get level 80
                    </p>
                    <time
                      datetime="ongoing"
                    >
                      achieved:
                      ongoing
                    </time>
                  </div>
                </div>
              </article>
            </div>
          </div>
        </div>
        <div>
          <label
            data-testid="test-achievements-label"
            for="all"
          >
            <input
              checked=""
              id="all"
              name="achievements"
              type="radio"
              value="all"
            />
            <div />
            <div>
              all
            </div>
          </label>
          <label
            data-testid="test-achievements-label"
            for="achieved"
          >
            <input
              id="achieved"
              name="achievements"
              type="radio"
              value="achieved"
            />
            <div />
            <div>
              achieved
            </div>
          </label>
          <label
            data-testid="test-achievements-label"
            for="inProgress"
          >
            <input
              id="inProgress"
              name="achievements"
              type="radio"
              value="inProgress"
            />
            <div />
            <div>
              in progress
            </div>
          </label>
        </div>
      </div>
    </section>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
